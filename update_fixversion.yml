---
- name: Update Jira fixVersion based on Git branch
  hosts: localhost
  gather_facts: false

  vars:
    jira_user: "{{ ansible_user }}"
    jira_token: "{{ ansible_password }}"
    jira_url: "https://jira.astralinux.ru"

  tasks:
    - name: Determine fixVersion
      set_fact:
        fix_version: >-
          {% if branch_name.startswith('release-') %}
            {{ branch_name | regex_replace('^release-', '') }}
          {% elif branch_name in ['devel', 'develop', 'master', 'main'] %}
            next-release
          {% else %}
            undefined
          {% endif %}

    - name: Stop if fix_version is undefined
      fail:
        msg: "Branch {{ branch_name }} is not for fixVersion update"
      when: fix_version == 'undefined'

    - name: Extract Jira issue keys from commit messages
      set_fact:
        issue_keys: >-
          {{
            commit_messages
            | map('regex_findall', '[A-Z][A-Z0-9]+-\d+')
            | sum(start=[])
            | unique
          }}

    - name: Update fixVersion in Jira issues
      uri:
        url: "{{ jira_url }}/rest/api/2/issue/{{ item }}"
        method: PUT
        user: "{{ jira_user }}"
        password: "{{ jira_token }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
        body_format: json
        body: >
          {
            "update": {
              "fixVersions": [
                { "set": [{ "name": "{{ fix_version }}" }] }
              ]
            }
          }
        status_code: [200, 204]
      loop: "{{ issue_keys }}"
      loop_control:
        label: "{{ item }}"
      ignore_errors: true